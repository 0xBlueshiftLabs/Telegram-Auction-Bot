service: auction-bot
frameworkVersion: '3'
plugins:
  - serverless-esbuild
  - serverless-dynamodb
  - serverless-offline
provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  environment:
    AWS_NODEJS_CONNECTION_REUSE_ENABLED: 1
  timeout: 900
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: arn:aws:dynamodb:us-east-1:599490174738:table/launchbot-${opt:stage, 'dev'}-table
        - Effect: Allow
          Action:
            - kms:GenerateMac
          Resource: arn:aws:dynamodb:us-east-1:599490174738:table/launchbot-${opt:stage, 'dev'}-table
custom:
  bundle:
    linting: false
  serverless-dynamodb:
    stages:
      - dev
      - prod
      - staging
    start:
      docker: true
      port: 5678

functions:
  AuctionBotHandler:
    handler: src/functions/auctionBot.handler
    events:
      - http:
          method: post
          path: auctionBotHandler
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/webAppReply
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/createAuctionHandler
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/settleAuctionHandler
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/claimBidHandler
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/cancelBidHandler
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/placeBidHandler
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/registerReferralCode
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/getUserDetails
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/claimReferralRewards
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/registerAuctionNotifications
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/cancelAuctionNotifications
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/notifyWebhook
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: get
          path: auctionBotHandler/auctionNotificationDetails
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/getPrivateKey
          cors: 
            origin: "*"
            headers: "*"
      - http:
          method: post
          path: auctionBotHandler/createTokenHandler
          cors: 
            origin: "*"
            headers: "*"
    environment:
      BOT_TOKEN: ${file(../../config/config.${opt:stage, 'dev'}.json):BOT_TOKEN}
      SECRET_KEY: ${file(../../config/config.${opt:stage, 'dev'}.json):SECRET_KEY}
      PRIVATE_KEY: ${file(../../config/config.${opt:stage, 'dev'}.json):PRIVATE_KEY}
      WEB_URL: ${file(../../config/config.${opt:stage, 'dev'}.json):WEBHOOK_URL}
      CHAINID: ${file(../../config/config.${opt:stage, 'dev'}.json):CHAINID}
      TABLE_NAME: ${file(../../config/config.${opt:stage, 'dev'}.json):TABLE_NAME}
      WEBHOOK_SECRET: ${file(../../config/config.${opt:stage, 'dev'}.json):WEBHOOK_SECRET}
      KMS_KEY_ID: ${file(../../config/config.${opt:stage, 'dev'}.json):KMS_KEY_ID}
      STAGE: ${opt:stage, 'dev'}
resources:
  Resources:
    AuctionsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${file(../../config/config.${opt:stage, 'dev'}.json):TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: auctionId
            AttributeType: S
        KeySchema:
          - AttributeName: auctionId
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    # AuctionBotKey:
    #   Type: AWS::KMS::Key
    #   Properties:
    #     KeyPolicy:
    #       Version: 2012-10-17
    #       Id: launchbot-${opt:stage, 'staging'}-key
    #       Statement:
    #         - Sid: ${opt:stage, 'staging'}-iam-user-policy
    #           Effect: Allow
    #           Principal:
    #             AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
    #                 # -  AccountID: ${AWS::AccountId}
    #           Action:
    #             - kms:*
    #           Resource: '*'
    #         - Sid: ${opt:stage, 'staging'}-key-generation-policy
    #           Effect: Allow
    #           Principal:
    #             AWS: !Sub "${AWS::StackName}-AuctionBotHandler"
    #                 # - 'arn:aws:lambda:${Region}:${AccountID}:function:auction-bot-${Stage}-AuctionBotHandler'
    #                 # - Region: ${AWS::Region}
    #                 #   AccountID: ${AWS::AccountId}
    #                 #   Stage: ${opt:stage,'staging'}
    #           Action:
    #             - kms:GenerateMac
    #           Resource: '*'

#     {
#     "Version": "2012-10-17",
#     "Statement": [
#         {
#             "Sid": "VisualEditor0",
#             "Effect": "Allow",
#             "Action": "kms:Decrypt",
#             "Resource": "arn:aws:kms:us-east-2:599490174738:key/e8b23d5d-12aa-4147-869d-d5edd840c0d1"
#         }
#     ]
# }